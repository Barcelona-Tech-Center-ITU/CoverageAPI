# GIGA Coverage API Environment Configuration
# Copy this file to .env and update values for your environment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL database name
POSTGRES_DB=coverage_db

# PostgreSQL username
POSTGRES_USER=coverage

# PostgreSQL password (change this in production!)
POSTGRES_PASSWORD=coverage

# Full database URL for application connections
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://coverage:coverage@postgres:5432/coverage_db

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Service version identifier
SERVICE_VERSION=1.0.0

# Enable debug mode (true/false) - should be false in production
DEBUG=false

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Host binding for services (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
HOST=0.0.0.0

# Default port for services (can be overridden per service)
PORT=8000

# =============================================================================
# ENVIRONMENT CONTROL
# =============================================================================

# Runtime environment (development, staging, production)
ENVIRONMENT=development

# Environment flag used in Docker Compose (development, production)
ENV=development

# =============================================================================
# PYTHON CONFIGURATION
# =============================================================================

# Prevent Python from buffering stdout/stderr (recommended for Docker)
PYTHONUNBUFFERED=1